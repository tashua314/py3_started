「継承」という新しいものを使ってるのはすごいですね！

また、sortedの使い方も正しく捉えられてます！

ただまだちょっとクラスという概念の理解が正しくないですね。。。

課題としては、まず、[age, name, gender]というプロパティを持つHumanインスタンスを複数作る。

という所からのスタートです。

現状だと、1つのHumanインスタンスに、[age, name, gender]が１セットのプロパティ群を複数登録している状態です。

１つのHumanには、１セットの[age, name, gender]しか持たせられません。（現実世界と一緒ですね）

そして、複数のHumanインスタンスをソートしてください。

Humanインスタンス自体をprintやソートしてみましたか？

おそらく想定通りにはいかないはずです。

その時役に立つのが、__lt__, __repr__なのです。

まず、クラスという概念をしっかり抑えなおしてみてください。

理解しやすいかなと思う記事をもう一つ載せておきます。

https://qiita.com/komo_ta/items/a5b4b5ea43cb8db2db2a


---
いいですね！中々Goodです！

ちゃんと表示もわかるようになってますし！

あとはそうですね。。。

publicとprivateの概念は理解できてますか？

`__info` 変数は前方にアンダーバーを2つ付けていますが、

`get_name` 等は特に付けていませんよね。

これに何か意図はありますか？

```
a = Human("夏目", 12, "男")
print(a.nam) # これでnameが表示されるのは想定通りだと思います
print(a.get_name) # これで何が表示されますか？これは想定通りですか？
```

上の3行目は想定外の動作だと思います。

基本的にはnaem/age/genderの値の取得・設定のみが想定する動作ですよね？

なので、 `get_name` 等は「外部から操作されたくない」ものだと思います。

ですので、「操作されたくないものとして表現する」もしくは「操作できなくする」よう修正しましょうか！

ヒントは、public, priavateという概念と、アンダーバーの数（0個、1個、2個）です。


---
いいですね！指摘事項がしっかり盛り込まれていますね！

OKです！

今回は課題に含めませんでしたが、

propertyやprivate/publicという概念があります。

たとえば、今回のHumanのnameを、

インスタンス生成時にのみ設定して、

それ以外での変更は不可能にしたりができます。

このあたりのよく使う概念・機能なので、よく覚えておきましょう！

https://www.python-izm.com/advanced/property/

https://qiita.com/0xfffffff7/items/6ef16e79fe9886acb3f2
