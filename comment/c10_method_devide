いいですね！大体OKです！

一箇所だけ直しましょうか。

判定処理と、結果何を表示するのか、という2つは切り分けられる事が可能です。

今回「素数/素数ではありません」と表示していますが、

「素数の時だけ数字を出力して欲しい」という要望が加わるかもしれません。

このような時、もし判定処理と、結果何を表示するのかを分けて書いていた場合、

判定処理自体には手を入れなくても良い事になります。

できるだけ処理を分割して、関数をわけるよう意識しましょう。

http://d.hatena.ne.jp/steel-plate/20080206/1202302846

---

ほぼほぼOKです！

2点だけ修正お願いします。

returnで返すのを真偽値(True/False) にする
実際の現場では、今回の素数判定関数のような何かを判定する関数があった場合、

その判定結果によって処理を分ける事になります。

今回は素数か素数じゃないかを出力するだけですが、

素数の値を配列に詰めるのかもしれないし、素数を別の式に代入するかもしれない。

そのような機能変更・追加に強いプログラムが良いプログラムとされています。

そのような考え方を、オブジェクト指向とか拡張性とかと言います。

オブジェクト指向とは

12行目以降の所を if __name__ == ‘__main__’: を使う
今の状態のロジックでは実はちょっとおかしなことがおこってしまします

たとえば、下記のように実行したらどうなりますでしょうか？

```
$ python3
>>> from Chapter10 import prime_num2
>>> prime_num2(3)
1行目実行後、おかしなことになりませんか？
```

if __name__ == ‘__main__’: を利用しましょう。

http://programming-study.com/technology/python-if-main/
